/**
 * Default variables and helper mixins
 */

@import 
    'defaults',
    'mixins';


/**
 * Grid scaffolding
 */

.container {
    @include clearfix;
    max-width: $grid-max-width;
    margin: 0 auto;
    padding: 0 $grid-gutter;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-left: -#{$grid-gutter};
    &.row--gutterless {
        margin-left: 0;
    }
    &.row--start {
        justify-content: flex-start;
        text-align: start;
    }
    &.row--center {
        justify-content: center;
        text-align: center;
    }
    &.row--center {
        justify-content: flex-end;
        text-align: end;
    }
    &.row--top {
        align-items: flex-start;
    }
    &.row--middle {
        align-items: center;
    }
    &.row--bottom {
        align-items: flex-end;
    }
    &.row--around {
        justify-content: space-around;
    }
    &.row--between {
        justify-content: space-between;
    }
    &.row--reverse {
        flex-direction: row-reverse;
    }
}

.col {
    padding-left: $grid-gutter;
    box-sizing: border-box;
    .row--gutterless & {
        padding-left: 0;
    }
}



/**
 * Columns generator
 */

@each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @media only screen and #{$declaration} {
        @include grid-loop($name);
    }
}
